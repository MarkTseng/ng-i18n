{"note":"Don't delete this file! It's used internally to help with page regeneration.","google":"","tagline":"Internationalization module for angular.js","body":"[![Build Status](https://travis-ci.org/gertn/ng-i18n.png)](https://travis-ci.org/gertn/ng-i18n)\r\n\r\n#Internationalization module for AngularJS\r\nThis is an internationalization module for AngularJS, it allows you to localize your application with resource bundles.\r\nThe file type for the resource bundle is '.json'.\r\n\r\nThe source files can be found in the `dist` directory.\r\n\r\n## How to use\r\nThis example uses two locales, 'en' which is the default and 'nl'.\r\nFor more configuration options take a look at the 'ngI18nConfig' section.\r\n\r\n### 1. create your resource bundle files\r\nYou need to provide a default resource bundle for the default locale and one for locale 'nl'.\r\nPut these resource bundles in the 'i18n' directory.\r\n\r\n```\r\ni18n/\r\n    resourceBundle.json\r\n    resourceBundle_nl.json\r\n```\r\n\r\nexample resourceBundle.json (for default locale)\r\n```javascript\r\n{\r\n    \"view_1\":\"First view\",\r\n    \"view_2\":\"Second view\",\r\n    \"language\": \"Language\",\r\n    \"text_view_1\":\"This is the first view, hopefully in English :)\",\r\n    \"text_view_2\":\"This is the second view, hopefully in English :)\"\r\n}\r\n```\r\n\r\nexample resourceBundle_nl.json (for locale 'nl')\r\n```javascript\r\n{\r\n    \"view_1\":\"Eerste view\",\r\n    \"view_2\":\"Tweede view\",\r\n    \"language\": \"Taal\",\r\n    \"text_view_1\":\"Dit is de eerste view, hopelijk in het Nederlands :)\",\r\n    \"text_view_2\":\"Dit is de tweede view, hopelijk in het Nederlands :)\"\r\n}\r\n```\r\n\r\n### 2. add script tag after angular.js\r\n\r\n```html\r\n<script type=\"text/javascript\" src=\"angular.js\"></script>\r\n<script type=\"text/javascript\" src=\"ng-i18n.js\"></script>\r\n```\r\n\r\n### 3. configure the module\r\n\r\n```javascript\r\n    var yourApp = angular.module('yourApp',['ngI18n', ... {other includes}]);\r\n    yourApp.value('ngI18nConfig', {\r\n        defaultLocale: 'en',\r\n        supportedLocales: ['en', 'nl'],\r\n    });\r\n```\r\n\r\n### 4. add language switcher to your html\r\n\r\n```html\r\n    <select name=\"switchLanguage\" ng-model=\"language\" id=\"switchLanguage\" ng-options=\"l.locale for l in languages\">\r\n```\r\n\r\n### 5. load the resource bundle from your main controller and $watch for changes to the language model\r\n\r\n```javascript\r\n   function MainCtrl(ngI18nResourceBundle, $scope) {\r\n\r\n       $scope.languages = [\r\n           {locale:\"en\"},\r\n           {locale:\"nl\"}\r\n       ];\r\n\r\n       $scope.language = $scope.languages[0];\r\n\r\n       $scope.$watch('language', function (language) {\r\n           ngI18nResourceBundle.get({locale: language.locale}).success(function (resourceBundle) {\r\n               $scope.resourceBundle = resourceBundle;\r\n           });\r\n       });\r\n   }\r\n   MainCtrl.$inject = ['ngI18nResourceBundle', '$scope'];\r\n```\r\n### 6. use the resourceBundle variable in your pages\r\n\r\n```html\r\n    <p>{{resourceBundle.text_view_1}}</p>\r\n```\r\n\r\nIf you selected 'en' as language then '{{resourceBundle.text_view_1}}' will be displayed as:\r\nThis is the first view, hopefully in English :)\r\n\r\nIf you selected 'nl' as language then  it will be displayed as:\r\nDit is de eerste view, hopelijk in het Nederlands :)\r\n\r\n## ngI18nConfig\r\nYou can declare 'ngI18nConfig' in your app as follows:\r\n```javascript\r\nvar yourApp = angular.module('yourApp', ['ngI18n']);\r\nyourApp.value('ngI18nConfig', {\r\n    ... {add your global defaults}\r\n});\r\n```\r\nGlobal options that can be provided:\r\n*  defaultLocale: specifies the default locale (required and in lowercase)\r\n*  supportedLocales: specifies the supported locales (required and in lowercase)\r\n*  basePath: specifies base path of url (optional)\r\n\r\n### 'defaultLocale' (always in lowercase, has no global default and should always be provided!!)\r\nExample config:\r\n```javascript\r\nvar yourApp = angular.module('yourApp', ['ngI18n']);\r\nyourApp.value('ngI18nConfig', {\r\n    //defaultLocale should be in lowercase and is required!!\r\n    defaultLocale: 'en-us'\r\n    ... {add your other global defaults}\r\n});\r\n```\r\n### 'supportedLocales' (always in lowercase, has no global default and should always be provided!!)\r\nExample config:\r\n```javascript\r\nvar yourApp = angular.module('yourApp', ['ngI18n']);\r\nyourApp.value('ngI18nConfig', {\r\n    //supportedLocales should be in lowercase and is required!!\r\n    supportedLocales: ['en-us', 'nl']\r\n    ... {add your other global defaults}\r\n});\r\n```\r\n\r\n### 'basePath' (global default is 'i18n')\r\nExample config:\r\n```javascript\r\nvar yourApp = angular.module('yourApp', ['ngI18n']);\r\nyourApp.value('ngI18nConfig', {\r\n    //without leading and trailing slashes (global default is i18n)\r\n    basePath: 'base/path'\r\n    ... {add your other global defaults}\r\n});\r\n```\r\n\r\n## ngI18nResourceBundle service\r\nIt has one method `get(options)`.\r\nIt will load the resource bundle according to the following algorithm:\r\n```\r\nFirst determine locale\r\n\tLocale provided with options?\r\n\t\tYes => use this locale\r\n\t\tNo => use locale form browser ($window.navigator.userLanguage || $window.navigator.language)\r\n\r\nIs this locale the default locale?\r\n\tYes => get default resourceBundle e.g. /i18n/resourceBundle.json\r\n\tNo => is this locale one of the supported locales?\r\n\t\t\tYes => get resourceBundle with locale suffix e.g. /i18n/resourceBundle_en.json (locale => 'en')\r\n\t\t\tNo => is language from this locale supported?\r\n\t\t\t\tYes =>  is language from locale default locale?\r\n\t\t\t\t    Yes => get default resourceBundle e.g. /i18n/resourceBundle.json\r\n\t\t\t\t    No => get resourceBundle with language from locale suffix\r\n\t\t\t\t            e.g. /i18n/resourceBundle_en.json (locale => 'en-US')\r\n\t\t\t\tNo => fallback to default resourceBundle e.g. /i18n/resourceBundle.json\r\n```\r\n\r\nLocal options that can be provided:\r\n*  locale: specifies the locale for the resource bundle (optional)\r\n*  name: specifies the name for the resource bundle (optional)\r\n\r\n### Examples\r\nThe examples use the following configuration:\r\n ```javascript\r\nvar yourApp = angular.module('yourApp', ['ngI18n']);\r\nyourApp.value('ngI18nConfig', {\r\n    defaultLocale: 'en',\r\n    supportedLocales: ['en', 'nl', 'fr-be'],\r\n    basePath: 'app/i18n'\r\n});\r\n```\r\nHttp Server running at http://localhost:8000/\r\n\r\n#### example - locale is default locale\r\n```javascript\r\nngI18nResourceBundle.get({locale: 'en'});\r\n```\r\n=> GET http://localhost:8000/app/i18n/resourceBundle.json\r\n\r\n#### example - locale is one of the supported locales\r\n```javascript\r\nngI18nResourceBundle.get({locale: 'nl'});\r\n```\r\n=> GET http://localhost:8000/app/i18n/resourceBundle_nl.json\r\n\r\n#### example - language of locale is one of the supported locales\r\n```javascript\r\nngI18nResourceBundle.get({locale: 'en-US'});\r\n```\r\n=> GET http://localhost:8000/app/i18n/resourceBundle_en.json\r\n\r\n#### example - locale with country is one of the supported locales\r\n```javascript\r\nngI18nResourceBundle.get({locale: 'fr-BE'});\r\n```\r\n=> GET http://localhost:8000/app/i18n/resourceBundle_fr-be.json (lowercase)\r\n\r\n#### example - locale not supported\r\n```javascript\r\nngI18nResourceBundle.get({locale: 'de'});\r\n```\r\n=> GET http://localhost:8000/app/i18n/resourceBundle.json  (default resourceBundle)\r\n\r\n#### example - custom name\r\n```javascript\r\nngI18nResourceBundle.get({locale: 'en', name: 'customName'});\r\n```\r\n=> GET http://localhost:8000/app/i18n/customName.json\r\n\r\n## Example app\r\nYou can find an example app in the app directory.\r\n\r\nLook at `app.js`, `controller.js`, `index.html` and the two partials in the `partials` directory.\r\n\r\n### Running the example app\r\n\r\nYou can pick one of these options:\r\n\r\n* serve this repository with your webserver\r\n* install node.js and run `scripts/web-server.js`\r\n\r\nThen navigate your browser to `http://localhost:<port>/app/index.html` to see the example app running in\r\nyour browser.\r\n","name":"Ng-i18n"}